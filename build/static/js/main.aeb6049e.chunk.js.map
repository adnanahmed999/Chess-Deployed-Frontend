{"version":3,"sources":["connections/socket.js","gameLogic/Game.js","gameLogic/Square.jsx","gameLogic/Piece.jsx","sound/moveAudio.mp3","gameLogic/Promote.jsx","gameLogic/BoardSquare.jsx","gameLogic/Board.jsx","gameLogic/coreGame.jsx","gameLogic/launchGame.js","connections/videoCall.js","mainPage/mainPage.js","App.js","reportWebVitals.js","index.js"],"names":["playerNumber","roomName","myID","otherPlayerID","socket","io","on","detailsObject","console","log","clientID","chess","Chess","gameSubject","BehaviorSubject","resetGame","whoReset","alert","reset","updateGame","move","from","to","promotion","tempMove","handleMovePieces","positionObject","promotions","moves","verbose","filter","m","some","p","color","getValue","pendingPromotion","handleMove","isGameOver","game_over","newGame","board","turn","result","getGameResult","isChecked","in_check","next","in_checkmate","winner","in_draw","reason","in_stalemate","in_threefold_repetition","insufficient_material","Square","children","bgClass","black","className","Piece","piece","type","position","useDrag","item","id","collect","monitor","isDragging","drag","preview","pieceImg","DragPreviewImage","connect","src","ref","style","opacity","alt","promotionPieces","Promote","map","i","onClick","emit","BoardSquare","useState","setPromotion","useSound","moveAudio","play","useDrop","accept","drop","pieceDetailArray","split","useEffect","subscribe","unsubscribe","Board","currBoard","setCurrBoard","getXYPosition","x","Math","abs","y","floor","isBlack","getPosition","flat","reverse","CoreGame","setBoard","setIsGameOver","setResult","setTurn","userChecked","setUserChecked","game","LaunchGame","DndProvider","backend","HTML5Backend","VideoCall","UserVideo","PartnerVideo","incomingCall","stream","setStream","receivingCall","setReceivingCall","caller","setCaller","callerSignal","setCallerSignal","callAccepted","setCallAccepted","userVideo","useRef","partnerVideo","navigator","mediaDevices","getUserMedia","video","audio","then","current","srcObject","data","signal","playsInline","muted","autoPlay","PLAYERNUMBER","peer","Peer","initiator","trickle","config","iceServers","urls","username","credential","userToCall","signalData","callPeer","MainPage","gotTheRoomName","setGotTheRoomName","setRoomName","gotUnknownCode","setGotUnknownCode","gotTooManyPlayers","setHandleTooManyPlayers","bothJoined","setBothJoined","opponentDisconnected","setOpponentDisconnected","typingRoomName","setTypingRoomName","history","useHistory","reload","go","handleGameCode","handleUnknownCode","handleTooManyPlayers","handleOpponentDisconnected","handleBothJoined","href","placeholder","value","onChange","e","target","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aeb6049e.chunk.js","sourcesContent":["import io from 'socket.io-client'\r\n\r\nconst ENDPOINT = \"https://multiplayer-chess-server.herokuapp.com/\";\r\n\r\nconst socket = io(ENDPOINT);\r\n\r\nvar playerNumber \r\nvar roomName\r\nvar myID // clientID of the user\r\nvar otherPlayerID\r\n// 1 for while, // 2 for black\r\n\r\nsocket.on('init', detailsObject => {\r\n    console.log(\"detailOb\", detailsObject)\r\n    playerNumber = detailsObject.playerNumber;\r\n    myID = detailsObject.clientID\r\n    roomName = detailsObject.roomName\r\n})\r\n\r\nsocket.on('otherPlayerClientID', clientID => {\r\n    otherPlayerID = clientID\r\n    console.log('down', otherPlayerID)\r\n})\r\n\r\nexport { socket, playerNumber, myID,  roomName, otherPlayerID }","import * as Chess from 'chess.js'\nimport { BehaviorSubject } from 'rxjs'\nimport { socket } from '../connections/socket'\n\n\nconst chess = new Chess()\n// instance of standard chess library\n\n\n\nexport const gameSubject = new BehaviorSubject()\n\nexport function initGame() {\n    updateGame()\n}\n\nexport function resetGame(whoReset) {\n    alert(`${whoReset} reset the Game.`)\n    chess.reset()\n    updateGame()\n}\n\nexport function handleMove(from, to) {\n    // console.log(chess.board())\n    const promotions = chess.moves({ verbose: true }).filter(m => m.promotion) // checking all possible moves, verbose true means we are converting it to array\n    // console.table(promotions)\n    if (promotions.some(p => `${p.from}:${p.to}` === `${from}:${to}`)) {\n        const pendingPromotion = { from, to, color: promotions[0].color }\n        updateGame(pendingPromotion)\n    }\n    const { pendingPromotion } = gameSubject.getValue()\n    if (!pendingPromotion) {\n        move(from, to)\n    }\n}\n\n\nexport function move(from, to, promotion) {\n    // promotion parameter is extra if you want to avoid promotion\n    let tempMove = { from, to }\n    if (promotion) {\n        tempMove.promotion = promotion\n    }\n    const legalMove = chess.move(tempMove)\n    if (legalMove) {\n        updateGame()\n    }\n}\n\nexport function handleMovePieces(positionObject) {\n    handleMove(positionObject.from, positionObject.to)\n}\n\nfunction updateGame(pendingPromotion) {\n    const isGameOver = chess.game_over()\n\n    const newGame = {\n        board: chess.board(),\n        pendingPromotion,\n        isGameOver,\n        turn: chess.turn(),\n        result: isGameOver ? getGameResult() : null,\n        isChecked: chess.in_check()\n    }\n\n    gameSubject.next(newGame)\n}\nfunction getGameResult() {\n    if (chess.in_checkmate()) {\n        const winner = chess.turn() === \"w\" ? 'BLACK' : 'WHITE'\n        return `CHECKMATE - WINNER - ${winner}`\n    } else if (chess.in_draw()) {\n        let reason = '50 - MOVES - RULE'\n        if (chess.in_stalemate()) {\n            reason = 'STALEMATE'\n        } else if (chess.in_threefold_repetition()) {\n            reason = 'REPETITION'\n        } else if (chess.insufficient_material()) {\n            reason = \"INSUFFICIENT MATERIAL\"\n        }\n        return `DRAW - ${reason}`\n    } else {\n        return 'UNKNOWN REASON'\n    }\n}","import React from 'react'\n\nexport default function Square({ children, black }) {\n  const bgClass = black ? 'square-black' : 'square-white'\n\n  return (\n    <div className={`${bgClass} board-square`}>\n      {children}\n    </div>\n  )\n}\n","import React from \"react\";\nimport { useDrag, DragPreviewImage } from \"react-dnd\";\n\n\nexport default function Piece({ piece: { type, color }, position }) {\n\n  const [{ isDragging }, drag, preview] = useDrag({\n    type: \"piece\",\n    item: {\n      id: `${position}_${type}_${color}`,\n    },\n    collect: (monitor) => {\n      return { isDragging: !!monitor.isDragging() };\n    },\n  });\n  // console.log(\"tc\", type, color)\n  const pieceImg = \"/assets/\"+type+\"_\"+color+\".png\";\n  return (\n    <>\n      <DragPreviewImage connect={preview} src={pieceImg} />\n      <div\n        className=\"piece-container\"\n        ref={drag}\n        style={{ opacity: isDragging ? 0 : 1 }}\n      >\n        <img src={pieceImg} alt={type+\" \"+color} className=\"piece\" />\n      </div>\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/moveAudio.d7687e92.mp3\";","\nimport React from 'react'\nimport Square from './Square'\nimport { move } from './Game'\nimport { socket } from '../connections/socket'\nconst promotionPieces = ['r', 'n', 'b', 'q']\n\nexport default function Promote({\n  promotion: { from, to, color },\n}) {\n  return (\n    <div className=\"board\">\n      {promotionPieces.map((p, i) => (\n        <div key={i} className=\"promote-square\">\n          <Square black={i % 3 === 0}>\n            <div\n              className=\"piece-container\"\n              onClick={() => {\n                move(from, to, p)\n                socket.emit('promoteMove', {from, to, p})\n              } }\n            >\n              <img\n                src={(`/assets/${p}_${color}.png`)}\n                alt=\"\"\n                className=\"piece cursor-pointer\"\n              />\n            </div>\n          </Square>\n        </div>\n      ))}\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport Square from './Square'\nimport Piece from './Piece'\nimport { useDrop } from 'react-dnd'\nimport { move } from './Game'\nimport { gameSubject } from './Game'\nimport { socket, playerNumber, roomName } from '../connections/socket'\nimport useSound from 'use-sound'\nimport moveAudio from '../sound/moveAudio.mp3'\nimport Promote from './Promote'\n\nexport default function BoardSquare({piece,black,position,turn}) {\n  const [promotion, setPromotion] = useState(null)\n  const [play] = useSound(moveAudio)\n  const [, drop] = useDrop({\n    accept: 'piece',\n    drop: (item) => {\n      // console.log(\"pos\",position)\n      const pieceDetailArray = item.id.split('_')\n      if( (playerNumber===1 && turn === 'w') || (playerNumber===2 && turn === 'b')) {\n        // handleMove(pieceDetailArray[0], position)\n        play()\n        socket.emit('validMove', {from: pieceDetailArray[0],to: position, roomName})\n      }\n    },\n  })\n\n  useEffect(() => {\n    const subscribe = gameSubject.subscribe(\n      ({ pendingPromotion }) =>\n        pendingPromotion && pendingPromotion.to === position\n          ? setPromotion(pendingPromotion)\n          : setPromotion(null)\n    )\n    return () => subscribe.unsubscribe()\n  }, [position])\n\n  useEffect(()=> {\n        socket.on('validPromoteMove', (detailsObject)=> {\n          move(detailsObject.from, detailsObject.to, detailsObject.p)\n        })\n  })\n  \n  return (\n    <div className=\"board-square\" ref={drop}>\n      <Square black={black}>\n        {promotion && (((playerNumber===1 && turn === 'w') || (playerNumber===2 && turn === 'b'))) ? (\n          <Promote promotion={promotion} />\n        ) : piece ? (\n          <Piece piece={piece} position={position} />\n        ) : null}\n      </Square>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport BoardSquare from './BoardSquare'\nimport { playerNumber } from '../connections/socket'\nimport { socket } from '../connections/socket'\nimport { handleMovePieces } from './Game'\n\n\nexport default function Board({ board, turn }) {\n  const [currBoard, setCurrBoard] = useState([])\n\n  useEffect(() => {\n    setCurrBoard(\n      playerNumber === 1 ? board.flat() : board.flat().reverse()\n    )\n  }, [board, playerNumber])\n\n  useEffect(()=> {\n    socket.on('movePieces', handleMovePieces)\n}, [])\n\n  function getXYPosition(i) {\n    \n// -> '   +------------------------+\n//      7 | r  n  b  q  k  b  n  r |\n//      6 | p  p  p  p  .  p  p  p |\n//      5 | .  .  .  .  .  .  .  . |\n//      4 | .  .  .  .  p  .  .  . |\n//      3 | .  .  .  .  P  P  .  . |\n//      2 | .  .  .  .  .  .  .  . |\n//      1 | P  P  P  P  .  .  P  P |\n//      0 | R  N  B  Q  K  B  N  R |\n//        +------------------------+\n//          0  1  2  3  4  5  6  7\n//       i values are indexes i.e from 0 (at (0,7)) to 63 (at (7,0))\n    const x = turn === 'w' ? i % 8 : Math.abs((i % 8) - 7)\n    const y =\n      turn === 'w'\n        ? Math.abs(Math.floor(i / 8) - 7)\n        : Math.floor(i / 8)\n    return { x, y }\n  }\n\n  function isBlack(i) {\n    const { x, y } = getXYPosition(i)\n    return (x + y) % 2 === 0\n  }\n\n  function getPosition(i) {\n    const { x, y } = getXYPosition(i)\n    const letter = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'][\n      x\n    ]\n    return `${letter}${y + 1}`\n  }\n  return (\n    <div className=\"board\">\n      {currBoard.map((piece, i) => (\n        <div key={i} className=\"square\">\n          <BoardSquare\n            piece={piece}\n            black={isBlack(i)}\n            position={getPosition(i)} \n            turn = {turn}\n          />\n        </div>\n      ))}\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport '../App.css'\nimport { gameSubject, initGame, resetGame } from './Game'\nimport Board from './Board'\nimport { roomName, socket, playerNumber } from '../connections/socket'\n\n\nfunction CoreGame() {\n  const [board, setBoard] = useState([])\n  const [isGameOver, setIsGameOver] = useState()\n  const [result, setResult] = useState()\n  const [turn, setTurn] = useState()\n  const [userChecked, setUserChecked] = useState(false)\n \n  \n  useEffect(() => {\n    initGame()\n    const subscribe = gameSubject.subscribe((game) => {\n      setBoard(game.board)\n      setIsGameOver(game.isGameOver)\n      setResult(game.result)\n      setTurn(game.turn)\n      setUserChecked(game.isChecked)\n    })\n    return () => subscribe.unsubscribe()\n  }, [])\n\n  useEffect(()=> {\n    socket.on('resetGame', resetGame)\n  }, [])\n\n  function handleReset() {\n    socket.emit('reStartNewGame', {roomName, playerNumber })\n  }\n\n\n\n  return (\n    <div className=\"container\">\n      <div>\n        {isGameOver && (\n          <h2 className=\"text\">\n            GAME OVER\n          </h2>\n        )}\n        <div>\n          <button className=\"btn btn-success mb-4\" onClick={handleReset}>Reset Game</button>\n          {userChecked && <h1>Check!!!</h1>}\n        </div>\n      </div>\n      <div className=\"board-container\">\n        <Board board={board} turn={turn} />\n      </div>\n      <div>\n        {result && <p className=\"text\">{result}</p>}\n      </div>\n    </div>\n  )\n}\n\nexport default CoreGame","import React from 'react';\nimport CoreGame from './coreGame';\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nexport default function LaunchGame() {\n  return (\n    <div>\n      <DndProvider backend={HTML5Backend}>\n        <CoreGame />\n      </DndProvider>   \n    </div>\n  )\n}\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport Peer from \"simple-peer\";\r\n// import { cred } from '../credential';\r\nimport { socket, myID, otherPlayerID, playerNumber } from './socket';\r\n\r\n\r\n\r\nfunction VideoCall() {\r\n  const [stream, setStream] = useState();\r\n  const [receivingCall, setReceivingCall] = useState(false);\r\n  const [caller, setCaller] = useState(\"\");\r\n  const [callerSignal, setCallerSignal] = useState();\r\n  const [callAccepted, setCallAccepted] = useState(false);\r\n\r\n  const userVideo = useRef();\r\n  const partnerVideo = useRef();\r\n\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then(stream => {\r\n      setStream(stream);\r\n      if (userVideo.current) {\r\n        userVideo.current.srcObject = stream;\r\n      }\r\n    })\r\n    socket.on(\"hey\", (data) => {\r\n      setReceivingCall(true);\r\n      setCaller(data.from);\r\n      setCallerSignal(data.signal);\r\n    })\r\n  }, []);\r\n\r\n  function callPeer(id) {\r\n      const peer = new Peer({\r\n        initiator: true,\r\n        trickle: false,\r\n        config: {\r\n  \r\n          iceServers: [\r\n              {\r\n                  urls: \"stun:numb.viagenie.ca\",\r\n                  username: \"adnanahmed.indian@gmail.com\",\r\n                  credential: 'passNUMB@123'\r\n              },\r\n              {\r\n                  urls: \"turn:numb.viagenie.ca\",\r\n                  username: \"adnanahmed.indian@gmail.com\",\r\n                  credential: 'passNUMB@123'\r\n              }\r\n          ]\r\n      },\r\n        stream: stream,\r\n      });\r\n        peer.on(\"signal\", data => {\r\n          socket.emit(\"callUser\", { userToCall: id, signalData: data, from: myID })\r\n        })\r\n    \r\n        peer.on(\"stream\", stream => {\r\n          if (partnerVideo.current) {\r\n            partnerVideo.current.srcObject = stream;\r\n          }\r\n        });\r\n    \r\n        socket.on(\"callAccepted\", signal => {\r\n          setCallAccepted(true);\r\n          peer.signal(signal);\r\n        })\r\n  }\r\n\r\n  function acceptCall() {\r\n    setCallAccepted(true);\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream: stream,\r\n    });\r\n    peer.on(\"signal\", data => {\r\n      socket.emit(\"acceptCall\", { signal: data, to: caller })\r\n    })\r\n\r\n    peer.on(\"stream\", stream => {\r\n      partnerVideo.current.srcObject = stream;\r\n    });\r\n\r\n    peer.signal(callerSignal);\r\n  }\r\n\r\n  let UserVideo;\r\n  if (stream) {\r\n    UserVideo = (\r\n      <video className=\"videoPlayer own-Video\" playsInline muted ref={userVideo} autoPlay />\r\n    );\r\n  }\r\n\r\n  let PartnerVideo;\r\n  if (callAccepted) {\r\n    PartnerVideo = (\r\n      <video className=\"videoPlayer partner-Video\" playsInline ref={partnerVideo} autoPlay />\r\n    );\r\n  }\r\n\r\n  let incomingCall;\r\n\r\n  const PLAYERNUMBER = playerNumber === 1 ? \"Player 2\" : \"Player 1\"\r\n\r\n  if (receivingCall) {\r\n    incomingCall = (\r\n      <div className=\"make-center\">\r\n        <h1>{PLAYERNUMBER} is calling you</h1>\r\n        <button className=\"btn btn-success\" onClick={acceptCall}>Accept</button>\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"styleVideoFrames\">\r\n          <div className=\"video-Div partner\">\r\n            {PartnerVideo} \r\n          </div>\r\n          <div className=\"video-Div user\">\r\n            {UserVideo}\r\n          </div>\r\n          <div className=\"make-center\">\r\n            {callAccepted==false && <button className=\"btn btn-success mt-5\" onClick={() => callPeer(otherPlayerID)}>Call Opponent</button>}\r\n          </div>\r\n          <div>\r\n            {callAccepted==false &&incomingCall}\r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoCall;","import React, { useEffect, useState } from \"react\";\r\nimport { socket } from \"../connections/socket\";\r\nimport LaunchGame from \"../gameLogic/launchGame\";\r\nimport VideoCall from \"../connections/videoCall\";\r\nimport { useHistory } from 'react-router'\r\n\r\nexport default function MainPage() {\r\n  const [gotTheRoomName, setGotTheRoomName] = useState(false);\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [gotUnknownCode, setGotUnknownCode] = useState(false);\r\n  const [gotTooManyPlayers, setHandleTooManyPlayers] = useState(false);\r\n  const [bothJoined, setBothJoined] = useState(false);\r\n  const [opponentDisconnected, setOpponentDisconnected] = useState(false);\r\n  const [typingRoomName, setTypingRoomName] = useState(\"\");\r\n\r\n  const history = useHistory()\r\n\r\n  function reload() {\r\n    history.go(0)\r\n  }\r\n\r\n  function createGameHandler() {\r\n    socket.emit(\"newGame\");\r\n  }\r\n\r\n  function joinSubmitHandler() {\r\n    console.log(\"Typed Code:\", typingRoomName);\r\n    socket.emit(\"joinGame\", typingRoomName);\r\n  }\r\n\r\n  function handleGameCode(roomName) {\r\n    console.log(\"Room Name:\", roomName);\r\n    console.log(\"Typeof Variable:\", typeof roomName);\r\n    setRoomName(roomName);\r\n    setGotTheRoomName(true);\r\n  }\r\n\r\n  function handleUnknownCode() {\r\n    // more to be done here, like removing unwanted stuff...\r\n    setGotUnknownCode(true);\r\n  }\r\n\r\n  function handleTooManyPlayers() {\r\n    // more to be done here, like removing unwanted stuff...\r\n    setHandleTooManyPlayers(true);\r\n  }\r\n\r\n  function handleOpponentDisconnected() {\r\n    setOpponentDisconnected(true);\r\n  }\r\n\r\n  function handleBothJoined() {\r\n    setBothJoined(true);\r\n  }\r\n\r\n  if (bothJoined) {\r\n    socket.emit(\"sendOtherPlayerClientID\", roomName);\r\n  }\r\n\r\n  useEffect(() => {\r\n    socket.on(\"gameCode\", handleGameCode);\r\n    socket.on(\"unknownCode\", handleUnknownCode);\r\n    socket.on(\"tooManyPlayers\", handleTooManyPlayers);\r\n    socket.on(\"bothJoined\", handleBothJoined);\r\n    socket.on(\"opponentDisconnected\", handleOpponentDisconnected);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {opponentDisconnected ? (\r\n        <div>\r\n          <h1>Opponent Disconnected</h1>\r\n          <button className=\"btn btn-success\" onClick={reload}> Main Page </button>\r\n        </div>\r\n      ) : bothJoined ? (\r\n        <div className=\"mainDiv\">\r\n          <VideoCall className=\"mainDiv-Child\" />\r\n          <LaunchGame className=\"mainDiv-Child\" />\r\n        </div>\r\n      ) : gotTheRoomName ? (\r\n        <div id=\"gameScreen\" className=\"h-100\">\r\n          <div className=\"d-flex flex-column align-items-center justify-content-center h-100\">\r\n            <h1>\r\n              The game code is: <span id=\"gameCodeDisplay\">{roomName}</span>\r\n            </h1>\r\n            <button className=\"btn btn-success\" onClick={reload}> Main Page </button>\r\n          </div>\r\n        </div>\r\n      ) : gotUnknownCode ? (\r\n        <div>\r\n          <h1>Please Enter Correct Code.</h1>\r\n          <button className=\"btn btn-success\" onClick={reload}> Main Page </button>\r\n        </div>\r\n      ) : gotTooManyPlayers ? (\r\n        <div>\r\n          <h1>Two players have joined the Game.</h1>\r\n          <button className=\"btn btn-success\" onClick={reload}> Main Page </button>\r\n        </div>\r\n      ) : (\r\n        <section className=\"vh-100\">\r\n          <div className=\"container h-100\">\r\n            <div id=\"initialScreen\" className=\"h-100\">\r\n              <div className=\"d-flex flex-column align-items-center justify-content-center h-100\">\r\n                <u>\r\n                  <h1>\r\n                    Made by Adnan Ahmed. Connect me on{\" \"}\r\n                    <a href=\"https://www.linkedin.com/in/adnan-ahmed99/\">\r\n                      LinkedIn\r\n                    </a>\r\n                  </h1>\r\n                </u>\r\n                <br />\r\n                <h2>Chess Talks</h2>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-success\"\r\n                  id=\"newGameButton\"\r\n                  onClick={createGameHandler}\r\n                >\r\n                  Create New Game\r\n                </button>\r\n                <div>OR</div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Game Code\"\r\n                    id=\"gameCodeInput\"\r\n                    value={typingRoomName}\r\n                    onChange={(e) => {\r\n                      setTypingRoomName(e.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-success\"\r\n                  id=\"joinGameButton\"\r\n                  onClick={joinSubmitHandler}\r\n                >\r\n                  Join Game\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport MainPage from './mainPage/mainPage';\nimport {BrowserRouter as Router , Redirect, Switch, Route} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact>\n          <MainPage/>\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}